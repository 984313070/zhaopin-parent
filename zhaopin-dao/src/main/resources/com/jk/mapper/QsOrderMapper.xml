<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.QsOrderMapper" >
  <resultMap id="BaseResultMap" type="com.jk.pojo.QsOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="oid" property="oid" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="utype" property="utype" jdbcType="TINYINT" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="BIT" />
    <result column="is_paid" property="isPaid" jdbcType="TINYINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="pay_points" property="payPoints" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="VARCHAR" />
    <result column="payment_cn" property="paymentCn" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="points" property="points" jdbcType="INTEGER" />
    <result column="setmeal" property="setmeal" jdbcType="INTEGER" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jk.pojo.QsOrder" extends="BaseResultMap" >
    <result column="params" property="params" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, oid, uid, utype, order_type, pay_type, is_paid, amount, pay_amount, pay_points, 
    payment, payment_cn, description, service_name, points, setmeal, notes, addtime, 
    payment_time, discount, fee
  </sql>
  <sql id="Blob_Column_List" >
    params
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jk.pojo.QsOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qs_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jk.pojo.QsOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qs_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qs_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from qs_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jk.pojo.QsOrderExample" >
    delete from qs_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jk.pojo.QsOrder" >
    insert into qs_order (id, oid, uid, 
      utype, order_type, pay_type, 
      is_paid, amount, pay_amount, 
      pay_points, payment, payment_cn, 
      description, service_name, points, 
      setmeal, notes, addtime, 
      payment_time, discount, fee, 
      params)
    values (#{id,jdbcType=INTEGER}, #{oid,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, 
      #{utype,jdbcType=TINYINT}, #{orderType,jdbcType=INTEGER}, #{payType,jdbcType=BIT}, 
      #{isPaid,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, 
      #{payPoints,jdbcType=INTEGER}, #{payment,jdbcType=VARCHAR}, #{paymentCn,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{serviceName,jdbcType=VARCHAR}, #{points,jdbcType=INTEGER}, 
      #{setmeal,jdbcType=INTEGER}, #{notes,jdbcType=VARCHAR}, #{addtime,jdbcType=INTEGER}, 
      #{paymentTime,jdbcType=INTEGER}, #{discount,jdbcType=VARCHAR}, #{fee,jdbcType=DECIMAL}, 
      #{params,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.pojo.QsOrder" >
    insert into qs_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="oid != null" >
        oid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="utype != null" >
        utype,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="isPaid != null" >
        is_paid,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payPoints != null" >
        pay_points,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="paymentCn != null" >
        payment_cn,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="serviceName != null" >
        service_name,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="setmeal != null" >
        setmeal,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="params != null" >
        params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="utype != null" >
        #{utype,jdbcType=TINYINT},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=BIT},
      </if>
      <if test="isPaid != null" >
        #{isPaid,jdbcType=TINYINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payPoints != null" >
        #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="paymentCn != null" >
        #{paymentCn,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null" >
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="setmeal != null" >
        #{setmeal,jdbcType=INTEGER},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="params != null" >
        #{params,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jk.pojo.QsOrderExample" resultType="java.lang.Integer" >
    select count(*) from qs_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update qs_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.utype != null" >
        utype = #{record.utype,jdbcType=TINYINT},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=BIT},
      </if>
      <if test="record.isPaid != null" >
        is_paid = #{record.isPaid,jdbcType=TINYINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payPoints != null" >
        pay_points = #{record.payPoints,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCn != null" >
        payment_cn = #{record.paymentCn,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null" >
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.points != null" >
        points = #{record.points,jdbcType=INTEGER},
      </if>
      <if test="record.setmeal != null" >
        setmeal = #{record.setmeal,jdbcType=INTEGER},
      </if>
      <if test="record.notes != null" >
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null" >
        payment_time = #{record.paymentTime,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update qs_order
    set id = #{record.id,jdbcType=INTEGER},
      oid = #{record.oid,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      utype = #{record.utype,jdbcType=TINYINT},
      order_type = #{record.orderType,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=BIT},
      is_paid = #{record.isPaid,jdbcType=TINYINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_points = #{record.payPoints,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=VARCHAR},
      payment_cn = #{record.paymentCn,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER},
      setmeal = #{record.setmeal,jdbcType=INTEGER},
      notes = #{record.notes,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DECIMAL},
      params = #{record.params,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update qs_order
    set id = #{record.id,jdbcType=INTEGER},
      oid = #{record.oid,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      utype = #{record.utype,jdbcType=TINYINT},
      order_type = #{record.orderType,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=BIT},
      is_paid = #{record.isPaid,jdbcType=TINYINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_points = #{record.payPoints,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=VARCHAR},
      payment_cn = #{record.paymentCn,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      points = #{record.points,jdbcType=INTEGER},
      setmeal = #{record.setmeal,jdbcType=INTEGER},
      notes = #{record.notes,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.pojo.QsOrder" >
    update qs_order
    <set >
      <if test="oid != null" >
        oid = #{oid,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="utype != null" >
        utype = #{utype,jdbcType=TINYINT},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=BIT},
      </if>
      <if test="isPaid != null" >
        is_paid = #{isPaid,jdbcType=TINYINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payPoints != null" >
        pay_points = #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="paymentCn != null" >
        payment_cn = #{paymentCn,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null" >
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="setmeal != null" >
        setmeal = #{setmeal,jdbcType=INTEGER},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jk.pojo.QsOrder" >
    update qs_order
    set oid = #{oid,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      utype = #{utype,jdbcType=TINYINT},
      order_type = #{orderType,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=BIT},
      is_paid = #{isPaid,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_points = #{payPoints,jdbcType=INTEGER},
      payment = #{payment,jdbcType=VARCHAR},
      payment_cn = #{paymentCn,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER},
      setmeal = #{setmeal,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=INTEGER},
      discount = #{discount,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL},
      params = #{params,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.pojo.QsOrder" >
    update qs_order
    set oid = #{oid,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      utype = #{utype,jdbcType=TINYINT},
      order_type = #{orderType,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=BIT},
      is_paid = #{isPaid,jdbcType=TINYINT},
      amount = #{amount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_points = #{payPoints,jdbcType=INTEGER},
      payment = #{payment,jdbcType=VARCHAR},
      payment_cn = #{paymentCn,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      points = #{points,jdbcType=INTEGER},
      setmeal = #{setmeal,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=INTEGER},
      discount = #{discount,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>